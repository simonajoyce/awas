package oracle.apps.awcust.awcustPerson.schema.server;
import oracle.apps.fnd.framework.server.OAEntityImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.AttributeList;
import oracle.jbo.server.TransactionEvent;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.RowID;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class awcustPersonDetailsEOImpl extends OAEntityImpl 
{
  protected static final int PERSONID = 0;
  protected static final int FIRSTNAME = 1;
  protected static final int LASTNAME = 2;
  protected static final int EMAIL = 3;
  protected static final int STARTDATE = 4;
  protected static final int ENDDATE = 5;
  protected static final int OFFICE = 6;
  protected static final int COSTCENTRE = 7;
  protected static final int LINEMANAGER = 8;
  protected static final int EXPENSESAPPROVER = 9;
  protected static final int JOBTITLE = 10;
  protected static final int EMPLOYEETYPE = 11;
  protected static final int PCTYPE = 12;
  protected static final int MOBILEDEVICE = 13;
  protected static final int DESKLOCATION = 14;
  protected static final int OTHERCOMMENTS = 15;
  protected static final int LASTUPDATEDATE = 16;
  protected static final int LASTUPDATELOGIN = 17;
  protected static final int LASTUPDATEDBY = 18;
  protected static final int CREATIONDATE = 19;
  protected static final int CREATEDBY = 20;
  protected static final int ROWID = 21;
  protected static final int STATUS = 22;
  protected static final int PERSONWITH = 23;
  protected static final int MANAGERAPPROVER = 24;
  protected static final int MANAGERRESPONSE = 25;
  protected static final int MANAGERRESPONSEDATE = 26;
  protected static final int ITAPPROVER = 27;
  protected static final int ITRESPONSE = 28;
  protected static final int ITRESPONSEDATE = 29;
  protected static final int CSAPPROVER = 30;
  protected static final int CSRESPONSE = 31;
  protected static final int CSRESPONSEDATE = 32;
  protected static final int APPROVALCOMMENTS = 33;
  protected static final int BUSINESSCARDS = 34;
  protected static final int MOBILENUMBER = 35;
  protected static final int DESKNUMBER = 36;
  protected static final int COPYUSERFROM = 37;
  protected static final int USERID = 38;
  protected static final int DEPARTMENT = 39;







  private static awcustPersonDetailsEODefImpl mDefinitionObject;

  /**
   * 
   * This is the default constructor (do not remove)
   */
  public awcustPersonDetailsEOImpl()
  {
  }

  /**
   * 
   * Retrieves the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject()
  {
    if (mDefinitionObject == null)
    {
      mDefinitionObject = (awcustPersonDetailsEODefImpl)EntityDefImpl.findDefObject("oracle.apps.awcust.awcustPerson.schema.server.awcustPersonDetailsEO");
    }
    return mDefinitionObject;
  }








  /**
   * 
   * Add attribute defaulting logic in this method.
   */
  public void create(AttributeList attributeList)
  {
    super.create(attributeList);
    setPersonId(getOADBTransaction().getSequenceValue("xxPERSONIDS"));
  }

  /**
   * 
   * Add Entity validation code in this method.
   */
  protected void validateEntity()
  {
    super.validateEntity();
  }

  /**
   * 
   * Add locking logic here.
   */
  public void lock()
  {
    super.lock();
  }

  /**
   * 
   * Custom DML update/insert/delete logic here.
   */
  protected void doDML(int operation, TransactionEvent e)
  {
    super.doDML(operation, e);
  }

  /**
   * 
   * Gets the attribute value for PersonId, using the alias name PersonId
   */
  public Number getPersonId()
  {
    return (Number)getAttributeInternal(PERSONID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for PersonId
   */
  public void setPersonId(Number value)
  {
    setAttributeInternal(PERSONID, value);
  }

  /**
   * 
   * Gets the attribute value for FirstName, using the alias name FirstName
   */
  public String getFirstName()
  {
    return (String)getAttributeInternal(FIRSTNAME);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FirstName
   */
  public void setFirstName(String value)
  {
    setAttributeInternal(FIRSTNAME, value);
  }

  /**
   * 
   * Gets the attribute value for LastName, using the alias name LastName
   */
  public String getLastName()
  {
    return (String)getAttributeInternal(LASTNAME);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastName
   */
  public void setLastName(String value)
  {
    setAttributeInternal(LASTNAME, value);
  }

  /**
   * 
   * Gets the attribute value for Email, using the alias name Email
   */
  public String getEmail()
  {
    return (String)getAttributeInternal(EMAIL);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Email
   */
  public void setEmail(String value)
  {
    setAttributeInternal(EMAIL, value);
  }

  /**
   * 
   * Gets the attribute value for StartDate, using the alias name StartDate
   */
  public Date getStartDate()
  {
    return (Date)getAttributeInternal(STARTDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for StartDate
   */
  public void setStartDate(Date value)
  {
    setAttributeInternal(STARTDATE, value);
  }

  /**
   * 
   * Gets the attribute value for EndDate, using the alias name EndDate
   */
  public Date getEndDate()
  {
    return (Date)getAttributeInternal(ENDDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for EndDate
   */
  public void setEndDate(Date value)
  {
    setAttributeInternal(ENDDATE, value);
  }

  /**
   * 
   * Gets the attribute value for Office, using the alias name Office
   */
  public String getOffice()
  {
    return (String)getAttributeInternal(OFFICE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Office
   */
  public void setOffice(String value)
  {
    setAttributeInternal(OFFICE, value);
  }

  /**
   * 
   * Gets the attribute value for CostCentre, using the alias name CostCentre
   */
  public Number getCostCentre()
  {
    return (Number)getAttributeInternal(COSTCENTRE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CostCentre
   */
  public void setCostCentre(Number value)
  {
    setAttributeInternal(COSTCENTRE, value);
  }

  /**
   * 
   * Gets the attribute value for LineManager, using the alias name LineManager
   */
  public String getLineManager()
  {
    return (String)getAttributeInternal(LINEMANAGER);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LineManager
   */
  public void setLineManager(String value)
  {
    setAttributeInternal(LINEMANAGER, value);
  }

  /**
   * 
   * Gets the attribute value for ExpensesApprover, using the alias name ExpensesApprover
   */
  public String getExpensesApprover()
  {
    return (String)getAttributeInternal(EXPENSESAPPROVER);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ExpensesApprover
   */
  public void setExpensesApprover(String value)
  {
    setAttributeInternal(EXPENSESAPPROVER, value);
  }

  /**
   * 
   * Gets the attribute value for JobTitle, using the alias name JobTitle
   */
  public String getJobTitle()
  {
    return (String)getAttributeInternal(JOBTITLE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for JobTitle
   */
  public void setJobTitle(String value)
  {
    setAttributeInternal(JOBTITLE, value);
  }

  /**
   * 
   * Gets the attribute value for EmployeeType, using the alias name EmployeeType
   */
  public String getEmployeeType()
  {
    return (String)getAttributeInternal(EMPLOYEETYPE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for EmployeeType
   */
  public void setEmployeeType(String value)
  {
    setAttributeInternal(EMPLOYEETYPE, value);
  }

  /**
   * 
   * Gets the attribute value for PcType, using the alias name PcType
   */
  public String getPcType()
  {
    return (String)getAttributeInternal(PCTYPE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for PcType
   */
  public void setPcType(String value)
  {
    setAttributeInternal(PCTYPE, value);
  }

  /**
   * 
   * Gets the attribute value for MobileDevice, using the alias name MobileDevice
   */
  public String getMobileDevice()
  {
    return (String)getAttributeInternal(MOBILEDEVICE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for MobileDevice
   */
  public void setMobileDevice(String value)
  {
    setAttributeInternal(MOBILEDEVICE, value);
  }

  /**
   * 
   * Gets the attribute value for DeskLocation, using the alias name DeskLocation
   */
  public String getDeskLocation()
  {
    return (String)getAttributeInternal(DESKLOCATION);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for DeskLocation
   */
  public void setDeskLocation(String value)
  {
    setAttributeInternal(DESKLOCATION, value);
  }

  /**
   * 
   * Gets the attribute value for OtherComments, using the alias name OtherComments
   */
  public String getOtherComments()
  {
    return (String)getAttributeInternal(OTHERCOMMENTS);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for OtherComments
   */
  public void setOtherComments(String value)
  {
    setAttributeInternal(OTHERCOMMENTS, value);
  }

  /**
   * 
   * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate
   */
  public Date getLastUpdateDate()
  {
    return (Date)getAttributeInternal(LASTUPDATEDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdateDate
   */
  public void setLastUpdateDate(Date value)
  {
    setAttributeInternal(LASTUPDATEDATE, value);
  }

  /**
   * 
   * Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin
   */
  public Number getLastUpdateLogin()
  {
    return (Number)getAttributeInternal(LASTUPDATELOGIN);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdateLogin
   */
  public void setLastUpdateLogin(Number value)
  {
    setAttributeInternal(LASTUPDATELOGIN, value);
  }

  /**
   * 
   * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy
   */
  public Number getLastUpdatedBy()
  {
    return (Number)getAttributeInternal(LASTUPDATEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdatedBy
   */
  public void setLastUpdatedBy(Number value)
  {
    setAttributeInternal(LASTUPDATEDBY, value);
  }

  /**
   * 
   * Gets the attribute value for CreationDate, using the alias name CreationDate
   */
  public Date getCreationDate()
  {
    return (Date)getAttributeInternal(CREATIONDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CreationDate
   */
  public void setCreationDate(Date value)
  {
    setAttributeInternal(CREATIONDATE, value);
  }

  /**
   * 
   * Gets the attribute value for CreatedBy, using the alias name CreatedBy
   */
  public Number getCreatedBy()
  {
    return (Number)getAttributeInternal(CREATEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CreatedBy
   */
  public void setCreatedBy(Number value)
  {
    setAttributeInternal(CREATEDBY, value);
  }

  /**
   * 
   * Gets the attribute value for RowID, using the alias name RowID
   */
  public RowID getRowID()
  {
    return (RowID)getAttributeInternal(ROWID);
  }
  //  Generated method. Do not modify.

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case PERSONID:
        return getPersonId();
      case FIRSTNAME:
        return getFirstName();
      case LASTNAME:
        return getLastName();
      case EMAIL:
        return getEmail();
      case STARTDATE:
        return getStartDate();
      case ENDDATE:
        return getEndDate();
      case OFFICE:
        return getOffice();
      case COSTCENTRE:
        return getCostCentre();
      case LINEMANAGER:
        return getLineManager();
      case EXPENSESAPPROVER:
        return getExpensesApprover();
      case JOBTITLE:
        return getJobTitle();
      case EMPLOYEETYPE:
        return getEmployeeType();
      case PCTYPE:
        return getPcType();
      case MOBILEDEVICE:
        return getMobileDevice();
      case DESKLOCATION:
        return getDeskLocation();
      case OTHERCOMMENTS:
        return getOtherComments();
      case LASTUPDATEDATE:
        return getLastUpdateDate();
      case LASTUPDATELOGIN:
        return getLastUpdateLogin();
      case LASTUPDATEDBY:
        return getLastUpdatedBy();
      case CREATIONDATE:
        return getCreationDate();
      case CREATEDBY:
        return getCreatedBy();
      case ROWID:
        return getRowID();
      case STATUS:
        return getStatus();
      case PERSONWITH:
        return getPersonWith();
      case MANAGERAPPROVER:
        return getManagerApprover();
      case MANAGERRESPONSE:
        return getManagerResponse();
      case MANAGERRESPONSEDATE:
        return getManagerResponseDate();
      case ITAPPROVER:
        return getItApprover();
      case ITRESPONSE:
        return getItResponse();
      case ITRESPONSEDATE:
        return getItResponseDate();
      case CSAPPROVER:
        return getCsApprover();
      case CSRESPONSE:
        return getCsResponse();
      case CSRESPONSEDATE:
        return getCsResponseDate();
      case APPROVALCOMMENTS:
        return getApprovalComments();
      case BUSINESSCARDS:
        return getBusinessCards();
      case MOBILENUMBER:
        return getMobileNumber();
      case DESKNUMBER:
        return getDeskNumber();
      case COPYUSERFROM:
        return getCopyUserFrom();
      case USERID:
        return getUserId();
      case DEPARTMENT:
        return getDepartment();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }
  //  Generated method. Do not modify.

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case PERSONID:
        setPersonId((Number)value);
        return;
      case FIRSTNAME:
        setFirstName((String)value);
        return;
      case LASTNAME:
        setLastName((String)value);
        return;
      case EMAIL:
        setEmail((String)value);
        return;
      case STARTDATE:
        setStartDate((Date)value);
        return;
      case ENDDATE:
        setEndDate((Date)value);
        return;
      case OFFICE:
        setOffice((String)value);
        return;
      case COSTCENTRE:
        setCostCentre((Number)value);
        return;
      case LINEMANAGER:
        setLineManager((String)value);
        return;
      case EXPENSESAPPROVER:
        setExpensesApprover((String)value);
        return;
      case JOBTITLE:
        setJobTitle((String)value);
        return;
      case EMPLOYEETYPE:
        setEmployeeType((String)value);
        return;
      case PCTYPE:
        setPcType((String)value);
        return;
      case MOBILEDEVICE:
        setMobileDevice((String)value);
        return;
      case DESKLOCATION:
        setDeskLocation((String)value);
        return;
      case OTHERCOMMENTS:
        setOtherComments((String)value);
        return;
      case LASTUPDATEDATE:
        setLastUpdateDate((Date)value);
        return;
      case LASTUPDATELOGIN:
        setLastUpdateLogin((Number)value);
        return;
      case LASTUPDATEDBY:
        setLastUpdatedBy((Number)value);
        return;
      case CREATIONDATE:
        setCreationDate((Date)value);
        return;
      case CREATEDBY:
        setCreatedBy((Number)value);
        return;
      case STATUS:
        setStatus((String)value);
        return;
      case PERSONWITH:
        setPersonWith((String)value);
        return;
      case MANAGERAPPROVER:
        setManagerApprover((String)value);
        return;
      case MANAGERRESPONSE:
        setManagerResponse((String)value);
        return;
      case MANAGERRESPONSEDATE:
        setManagerResponseDate((Date)value);
        return;
      case ITAPPROVER:
        setItApprover((String)value);
        return;
      case ITRESPONSE:
        setItResponse((String)value);
        return;
      case ITRESPONSEDATE:
        setItResponseDate((Date)value);
        return;
      case CSAPPROVER:
        setCsApprover((String)value);
        return;
      case CSRESPONSE:
        setCsResponse((String)value);
        return;
      case CSRESPONSEDATE:
        setCsResponseDate((Date)value);
        return;
      case APPROVALCOMMENTS:
        setApprovalComments((String)value);
        return;
      case BUSINESSCARDS:
        setBusinessCards((String)value);
        return;
      case MOBILENUMBER:
        setMobileNumber((String)value);
        return;
      case DESKNUMBER:
        setDeskNumber((String)value);
        return;
      case COPYUSERFROM:
        setCopyUserFrom((String)value);
        return;
      case USERID:
        setUserId((Number)value);
        return;
      case DEPARTMENT:
        setDepartment((String)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }

  /**
   * 
   * Gets the attribute value for Status, using the alias name Status
   */
  public String getStatus()
  {
    return (String)getAttributeInternal(STATUS);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Status
   */
  public void setStatus(String value)
  {
    setAttributeInternal(STATUS, value);
  }

  /**
   * 
   * Gets the attribute value for PersonWith, using the alias name PersonWith
   */
  public String getPersonWith()
  {
    return (String)getAttributeInternal(PERSONWITH);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for PersonWith
   */
  public void setPersonWith(String value)
  {
    setAttributeInternal(PERSONWITH, value);
  }

  /**
   * 
   * Gets the attribute value for ManagerApprover, using the alias name ManagerApprover
   */
  public String getManagerApprover()
  {
    return (String)getAttributeInternal(MANAGERAPPROVER);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ManagerApprover
   */
  public void setManagerApprover(String value)
  {
    setAttributeInternal(MANAGERAPPROVER, value);
  }

  /**
   * 
   * Gets the attribute value for ManagerResponse, using the alias name ManagerResponse
   */
  public String getManagerResponse()
  {
    return (String)getAttributeInternal(MANAGERRESPONSE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ManagerResponse
   */
  public void setManagerResponse(String value)
  {
    setAttributeInternal(MANAGERRESPONSE, value);
  }

  /**
   * 
   * Gets the attribute value for ManagerResponseDate, using the alias name ManagerResponseDate
   */
  public Date getManagerResponseDate()
  {
    return (Date)getAttributeInternal(MANAGERRESPONSEDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ManagerResponseDate
   */
  public void setManagerResponseDate(Date value)
  {
    setAttributeInternal(MANAGERRESPONSEDATE, value);
  }

  /**
   * 
   * Gets the attribute value for ItApprover, using the alias name ItApprover
   */
  public String getItApprover()
  {
    return (String)getAttributeInternal(ITAPPROVER);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ItApprover
   */
  public void setItApprover(String value)
  {
    setAttributeInternal(ITAPPROVER, value);
  }

  /**
   * 
   * Gets the attribute value for ItResponse, using the alias name ItResponse
   */
  public String getItResponse()
  {
    return (String)getAttributeInternal(ITRESPONSE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ItResponse
   */
  public void setItResponse(String value)
  {
    setAttributeInternal(ITRESPONSE, value);
  }

  /**
   * 
   * Gets the attribute value for ItResponseDate, using the alias name ItResponseDate
   */
  public Date getItResponseDate()
  {
    return (Date)getAttributeInternal(ITRESPONSEDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ItResponseDate
   */
  public void setItResponseDate(Date value)
  {
    setAttributeInternal(ITRESPONSEDATE, value);
  }

  /**
   * 
   * Gets the attribute value for CsApprover, using the alias name CsApprover
   */
  public String getCsApprover()
  {
    return (String)getAttributeInternal(CSAPPROVER);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CsApprover
   */
  public void setCsApprover(String value)
  {
    setAttributeInternal(CSAPPROVER, value);
  }

  /**
   * 
   * Gets the attribute value for CsResponse, using the alias name CsResponse
   */
  public String getCsResponse()
  {
    return (String)getAttributeInternal(CSRESPONSE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CsResponse
   */
  public void setCsResponse(String value)
  {
    setAttributeInternal(CSRESPONSE, value);
  }

  /**
   * 
   * Gets the attribute value for CsResponseDate, using the alias name CsResponseDate
   */
  public Date getCsResponseDate()
  {
    return (Date)getAttributeInternal(CSRESPONSEDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CsResponseDate
   */
  public void setCsResponseDate(Date value)
  {
    setAttributeInternal(CSRESPONSEDATE, value);
  }

  /**
   * 
   * Gets the attribute value for ApprovalComments, using the alias name ApprovalComments
   */
  public String getApprovalComments()
  {
    return (String)getAttributeInternal(APPROVALCOMMENTS);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ApprovalComments
   */
  public void setApprovalComments(String value)
  {
    setAttributeInternal(APPROVALCOMMENTS, value);
  }

  /**
   * 
   * Gets the attribute value for BusinessCards, using the alias name BusinessCards
   */
  public String getBusinessCards()
  {
    return (String)getAttributeInternal(BUSINESSCARDS);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for BusinessCards
   */
  public void setBusinessCards(String value)
  {
    setAttributeInternal(BUSINESSCARDS, value);
  }

  /**
   * 
   * Gets the attribute value for MobileNumber, using the alias name MobileNumber
   */
  public String getMobileNumber()
  {
    return (String)getAttributeInternal(MOBILENUMBER);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for MobileNumber
   */
  public void setMobileNumber(String value)
  {
    setAttributeInternal(MOBILENUMBER, value);
  }

  /**
   * 
   * Gets the attribute value for DeskNumber, using the alias name DeskNumber
   */
  public String getDeskNumber()
  {
    return (String)getAttributeInternal(DESKNUMBER);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for DeskNumber
   */
  public void setDeskNumber(String value)
  {
    setAttributeInternal(DESKNUMBER, value);
  }

  /**
   * 
   * Gets the attribute value for CopyUserFrom, using the alias name CopyUserFrom
   */
  public String getCopyUserFrom()
  {
    return (String)getAttributeInternal(COPYUSERFROM);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CopyUserFrom
   */
  public void setCopyUserFrom(String value)
  {
    setAttributeInternal(COPYUSERFROM, value);
  }

  /**
   * 
   * Gets the attribute value for UserId, using the alias name UserId
   */
  public Number getUserId()
  {
    return (Number)getAttributeInternal(USERID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for UserId
   */
  public void setUserId(Number value)
  {
    setAttributeInternal(USERID, value);
  }

  /**
   * 
   * Gets the attribute value for Department, using the alias name Department
   */
  public String getDepartment()
  {
    return (String)getAttributeInternal(DEPARTMENT);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Department
   */
  public void setDepartment(String value)
  {
    setAttributeInternal(DEPARTMENT, value);
  }
}