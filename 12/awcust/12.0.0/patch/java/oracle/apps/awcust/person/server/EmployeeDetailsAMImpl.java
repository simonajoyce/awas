package oracle.apps.awcust.person.server;

import oracle.apps.fnd.framework.OAException;
import oracle.apps.fnd.framework.server.OAApplicationModuleImpl;
import oracle.apps.fnd.framework.server.OADBTransaction;
import oracle.apps.fnd.framework.server.OAViewObjectImpl;
import oracle.jbo.domain.Number;

import oracle.jbo.Row;
import oracle.jbo.server.ViewLinkImpl;

// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class EmployeeDetailsAMImpl extends OAApplicationModuleImpl {
    /**This is the default constructor (do not remove)
     */
    public EmployeeDetailsAMImpl() {
    }

    /**Sample main for debugging Business Components code using the tester.
     */
    public static void main(String[] args) {
        launchTester("oracle.apps.awcust.person.server", /* package name */
      "EmployeeDetailsAMLocal" /* Configuration Name */);
    }

    /**Container's getter for EmployeeDetailsVO1
     */
    public OAViewObjectImpl getEmployeeDetailsVO1() {
        return (OAViewObjectImpl)findViewObject("EmployeeDetailsVO1");
    }

    /**Container's getter for EmployeeAssignmentsVO1
     */
    public OAViewObjectImpl getEmployeeAssignmentsVO1() {
        return (OAViewObjectImpl)findViewObject("EmployeeAssignmentsVO1");
    }

    /**Container's getter for EmployeeAssignmentsVL1
     */
    public ViewLinkImpl getEmployeeAssignmentsVL1() {
        return (ViewLinkImpl)findViewLink("EmployeeAssignmentsVL1");
    }

    /**Container's getter for EmpDetailsCreateVO1
     */
    public OAViewObjectImpl getEmpDetailsCreateVO1() {
        return (OAViewObjectImpl)findViewObject("EmpDetailsCreateVO1");
    }
    /**
     * createNewEmployee method
     */
     public void createNewEmployee(){
         //create an instance of the view object and call it vo
        OAViewObjectImpl vo = getEmpDetailsCreateVO1();
        
        // we need to do this on a VO that has not been queried before we insert
        // our first row. We don't want to do it for subsequent inserts
        if(vo.getFetchedRowCount()==0){
            vo.setMaxFetchSize(0);
        }
        // We are now going to create a record in the view object
        Row row = vo.createRow();
        OADBTransaction txn = getOADBTransaction();
        Number tmpPersonId = txn.getSequenceValue("XXPERSONIDS");
        
        row.setAttribute("PersonId",tmpPersonId);
        row.setAttribute("Status","New");
        // Now we will call the standard method to insert row
        vo.insertRow(row);
        // Required as per OA Framework Model Coding Std
        row.setNewRowState(Row.STATUS_INITIALIZED);
         
     }
     /**
     * commitTransaction method
     */
     public void commitTransaction(){
         //commit the transaction
        try{
         getTransaction().commit();
        }
        catch(Exception e) {
            String message = "First Name/Last Name Combination must be unique. Please verify that you are creating a new employee. If you are and there are two employees with the same name then please append an Initial to the end of the First name to make them unique.";
                       throw new OAException(message, OAException.ERROR);  
        }
     }
     /**
      * rollbackEmployeeCreate
      */
      public void rollbackEmployeeCreate()
        {
        getDBTransaction().rollback();
        }
}
