CREATE OR REPLACE PACKAGE XX_PA_BUDGET_WF AS 

PROCEDURE PA_BUDGET_LINES( p_budget_version_id		IN NUMBER ,
				   display_type		IN VARCHAR2 DEFAULT 'text/html',
				   document			IN OUT	NOCOPY VARCHAR2,
           document_type	in out	nocopy varchar2);



END XX_PA_BUDGET_WF;
 
/


CREATE OR REPLACE PACKAGE BODY XX_PA_BUDGET_WF AS

G_API_VERSION_NUMBER 	CONSTANT NUMBER := 1.0;

TYPE BUDGET_LINES_RECORD IS RECORD
		( grouping  varchar2(30),
		  expenditure_type pa_resource_assignments.expenditure_type%type,
		  old	   	     number,
		  new           number,
      VARIANCE           NUMBER,
      ACTUALS       NUMBER,
      COMMITMENTS  NUMBER,
      total_costs  number
		 );
     
 

  PROCEDURE PA_BUDGET_LINES( p_budget_version_id		IN NUMBER ,
				   display_type		IN VARCHAR2 DEFAULT 'text/html',
				   document			IN OUT	NOCOPY VARCHAR2,
           document_type	in out	nocopy varchar2) AS
           
           
  l_line		      budget_lines_record;
  l_document			varchar2(32000) := '';
  l_budget_version_id number;
  
  NL				VARCHAR2(1) := fnd_global.newline;
  i				NUMBER := 0;
  max_lines_dsp			NUMBER := 20;
  line_mesg			VARCHAR2(240);
  curr_len			number := 0;
  prior_len			NUMBER := 0;
  
  cursor budget_line_cur (v_budget_version_id number) is 
 SELECT y.grouping, x.EXPENDITURE_TYPE,
              SUM(DECODE(VERS,'OLD',nvl(RAW_COST,0),0)) OLD,
              SUM(DECODE(VERS,'NEW',NVL(RAW_COST,0),0)) NEW, 
              SUM(DECODE(VERS,'NEW',nvl(RAW_COST,0),0))-  SUM(DECODE(VERS,'OLD',nvl(RAW_COST,0),0)) VARIANCE,
              SUM(DECODE(VERS,'Actuals',NVL(RAW_COST,0),0)) ACTUALS, 
              SUM(DECODE(VERS,'Commitments',NVL(RAW_COST,0),0)) COMMITMENTS, 
              SUM(DECODE(VERS,'Actuals',NVL(RAW_COST,0),0)) + SUM(DECODE(VERS,'Commitments',NVL(RAW_COST,0),0)) TOTAL_COST 
      from
(select 'NEW' vers, r.expenditure_type, l.raw_cost
from pa_budget_versions v,
pa_resource_assignments r,
pa_budget_lines l
where v.budget_version_id = v_budget_version_id
and r.budget_version_id (+) = v.budget_version_id
and l.resource_assignment_id (+) = r.resource_assignment_id
union all
select 'OLD', r.expenditure_type, l.raw_cost
from pa_budget_versions v,
pa_resource_assignments r,
pa_budget_lines l
where v.budget_version_id = (select max(y.budget_version_id) from pa_budget_versions y, pa_budget_versions z
                              where z.budget_version_id = v_budget_version_id
                              and y.project_id = z.project_id
                              and y.fin_plan_type_id = z.fin_plan_type_id
                              and y.budget_status_Code = 'B')
and r.budget_version_id (+) = v.budget_version_id
AND L.RESOURCE_ASSIGNMENT_ID (+) = R.RESOURCE_ASSIGNMENT_ID
union all
SELECT 'Actuals' ,EI.EXPENDITURE_TYPE EXPENDITURE_TYPE, ROUND(SUM(EI.RAW_COST),2) AMOUNT
FROM PA_EXPENDITURE_ITEMS_ALL EI, PA_BUDGET_VERSIONS V
WHERE V.PROJECT_ID = EI.PROJECT_ID AND V.BUDGET_VERSION_ID = V_BUDGET_VERSION_ID
GROUP BY v.PROJECT_ID, EI.EXPENDITURE_TYPE
UNION ALL
SELECT 'Commitments', C.EXPENDITURE_TYPE CMT_EXP_TYPE, ROUND(SUM(C.TOT_CMT_RAW_COST),2) CMT_RAW_COST
FROM PA_COMMITMENT_TXNS C, PA_BUDGET_VERSIONS V
WHERE V.PROJECT_ID = C.PROJECT_ID AND V.BUDGET_VERSION_ID = V_BUDGET_VERSION_ID
GROUP BY v.PROJECT_ID, EXPENDITURE_TYPE) X,
(SELECT segment_value_lookup exp_type, decode(segment_value,'000000','Accrual','Non Accrual') grouping
FROM PA_SEGMENT_VALUE_LOOKUPS SVL
WHERE SVL.SEGMENT_VALUE_LOOKUP_SET_ID = 1) Y
WHERE X.EXPENDITURE_TYPE = Y.EXP_TYPE (+)
GROUP BY Y.GROUPING,X.EXPENDITURE_TYPE
having Y.Grouping = 'Accrual'
order by y.grouping, x.expenditure_type
;

  old_total number;
  new_total number;
  VARIANCE_TOTAL NUMBER;
  COST_TOTAL   NUMBER;
  COMMITMENT_TOTAL NUMBER;
  total_total number;
           
  BEGIN
    
  l_budget_version_id := p_budget_version_id;
  max_lines_dsp := 20;
  
  old_total :=0;
  new_total :=0;
  VARIANCE_TOTAL :=0;
    COST_TOTAL   :=0;
  COMMITMENT_TOTAL :=0;
  total_total :=0;
  
  if (display_type = 'text/html') then
  
      l_document := nl || nl || '<!-- BUDGET LINES -->'|| nl || nl || '<P><B>';
    	l_document := l_document || 'Budget Lines';
    	l_document := l_document || '</B>';
      
      l_document := l_document || '<TABLE border=1 cellpadding=2 cellspacing=1 summary="' ||  fnd_message.get_string('ICX','ICX_POR_TBL_PO_TO_APPROVE_SUM') || '"> '|| nl;
      
      -- Column Headings
      l_document := l_document || '<TR>' || nl;
      l_document := l_document || '<TH  id="EXPENDITURE_TYPE">' ||'Expenditure Type'|| '</TH>' || nl;
      l_document := l_document || '<TH  id="OLD">' || 'Old Amount' || '</TH>' || nl;
      L_DOCUMENT := L_DOCUMENT || '<TH  id="NEW">' || 'New Amount' || '</TH>' || NL;
      L_DOCUMENT := L_DOCUMENT || '<TH  id="VARIANCE">' || 'New Accrual Amount'|| '</TH>' || NL;
      L_DOCUMENT := L_DOCUMENT || '<TH  id="ACTUALS">' || 'Actuals'|| '</TH>' || NL;
      L_DOCUMENT := L_DOCUMENT || '<TH  id="COMMITMENTS">' || 'Commitments'|| '</TH>' || NL;
      l_document := l_document || '<TH  id="TOTAL_COSTS">' || 'Total Costs'|| '</TH>' || nl;
      l_document := l_document || '</TR>' || NL;

        curr_len  := lengthb(l_document);
        prior_len := curr_len;  
    
      OPEN budget_line_cur(l_budget_version_id);

    	loop
  	  FETCH budget_line_cur INTO l_line;
          i := i + 1;
          EXIT WHEN budget_line_cur%NOTFOUND;
    
                /* Exit the cursor if the current document length and 2 times the
                ** length added in prior line exceeds 32000 char */

                IF (curr_len + (2 * (curr_len - prior_len))) >= 32000 THEN
                   EXIT;
                END IF;

                prior_len := curr_len;
            
            l_document := l_document || '<TR>' || NL;
    
    
            l_document := l_document || '<TD nowrap headers="EXPENDITURE_TYPE">'
                  || NVL(l_line.expenditure_type, '&'||'nbsp') || '</TD>' || NL;
                 
            l_document := l_document || '<TD nowrap align=right headers="OLD">'
                  || to_char(NVL(l_line.Old,0),'999,999,999.90') || '</TD>' || NL;
           
           l_document := l_document || '<TD nowrap align=right headers="NEW">'
                  || to_char(nvl(l_line.new,0),'999,999,999.90') || '</TD>' || nl;

           l_document := l_document || '<TD nowrap align=right headers="VARIANCE">'
                  || TO_CHAR(NVL(L_LINE.VARIANCE,0),'999,999,999.90') || '</TD>' || NL;
                  
          L_DOCUMENT := L_DOCUMENT || '<TD nowrap align=right headers="ACTUALS">'
                  || to_char(NVL(l_line.Actuals,0),'999,999,999.90') || '</TD>' || NL;
           
           L_DOCUMENT := L_DOCUMENT || '<TD nowrap align=right headers="COMMITMENTS">'
                  || to_char(nvl(l_line.commitments,0),'999,999,999.90') || '</TD>' || nl;

           L_DOCUMENT := L_DOCUMENT || '<TD nowrap align=right headers="TOTAL_COSTS">'
                  || to_char(NVL(l_line.total_costs,0),'999,999,999.90') || '</TD>' || NL;
    
           l_document := l_document || '</TR>' || NL;

          old_total := old_total+nvl(l_line.old,0);
          new_total := new_total+nvl(l_line.new,0);
          VARIANCE_TOTAL := VARIANCE_TOTAL+NVL(L_LINE.VARIANCE,0);
          COST_TOTAL   := COST_TOTAL+NVL(L_LINE.ACTUALS,0);
          COMMITMENT_TOTAL := COMMITMENT_TOTAL+NVL(L_LINE.COMMITMENTS,0);
          TOTAL_TOTAL  := TOTAL_TOTAL+NVL(L_LINE.TOTAL_COSTS,0);
      
           EXIT WHEN i = max_lines_dsp;

                curr_len  := LENGTHB(l_document);
    	END LOOP;
      
      -- Put in Total Line
      l_document := l_document || '<TR>' || NL;
    
    
            l_document := l_document || '<TD nowrap headers="EXPENDITURE_TYPE"><B>'
                  || 'Totals' || '</B></TD>' || NL;
                 
            l_document := l_document || '<TD nowrap align=right headers="OLD"><B>'
                  || to_char(old_total,'999,999,999.90') || '</B></TD>' || nl;
           
           l_document := l_document || '<TD nowrap align=right headers="NEW"><B>'
                  ||to_char(new_total,'999,999,999.90')|| '</B></TD>' || nl;

           l_document := l_document || '<TD nowrap align=right headers="VARIANCE"><B>'
                  ||to_char(variance_total,'999,999,999.90') || '</B></TD>' || NL;
                  
           L_DOCUMENT := L_DOCUMENT || '<TD nowrap align=right headers="ACTUALS"><B>'
                  || TO_CHAR(COST_TOTAL,'999,999,999.90') || '</B></TD>' || NL;
           
           L_DOCUMENT := L_DOCUMENT || '<TD nowrap align=right headers="COMMITMENTS"><B>'
                  ||to_char(commitment_total,'999,999,999.90')|| '</B></TD>' || nl;

           L_DOCUMENT := L_DOCUMENT || '<TD nowrap align=right headers="TOTAL_COSTS"><B>'
                  ||to_char(total_total,'999,999,999.90') || '</B></TD>' || NL;
    
           l_document := l_document || '</TR>' || nl;
           
           
      l_document := l_document || '</TABLE></P>' || NL;

    	CLOSE budget_line_cur;

	END IF;

	document:= l_document;
    
    
  END PA_BUDGET_LINES;

END XX_PA_BUDGET_WF;
/
